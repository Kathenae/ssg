<?php

use Kathenae\SSG\Data;
use Kathenae\SSG\FsWatcher;
use Kathenae\SSG\HttpHandler;
use Kathenae\SSG\Renderer;
use Kathenae\SSG\SSGHandler;

chdir(__DIR__);
require_once("../vendor/autoload.php");
$router = require_once 'routes.php';

Data::useDirectory("data");
$renderer = new Renderer('templates');

if (PHP_SAPI === 'cli') {
    $watcher = new FsWatcher(__DIR__, [__DIR__ . '/public']);
    $watcher->watch(function () use ($renderer, $router) {
        print ("\nStarting SSG generation...\n\n");
        $startTime = microtime(true);
        $ssgHandler = new SSGHandler(
            $renderer,
            $router,
            __DIR__ . '/public',
            __DIR__ . '/assets'
        );
        $ssgHandler->handle();
        $endTime = microtime(true);
        $duration = $endTime - $startTime;
        printf("\nSSG generation completed in %.2f seconds.\n", $duration);
    });
} else {
    $httphandler = new HttpHandler(
        $renderer,
        $router
    );
    $httphandler->handle();
}